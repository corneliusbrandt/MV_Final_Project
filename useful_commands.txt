# Build docker container
docker build -t gesturebot .

# Start docker container
docker run -it \
    --env="DISPLAY" \
    --env="QT_X11_NO_MITSHM=1" \
    --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
    -v '/home/fynn/UiA/Machine Vision/gesturebot_ws':'/home/robo/gesturebot_ws' \
    --device=/dev/dri:/dev/dri \
    --device=/dev/video0:/dev/video0 \
    --group-add=$(getent group video | cut -d: -f3) \
    --network=host \
    --name "gesturebot" \
    gesturebot:latest

# Open running container in new terminal
docker exec -it gesturebot /bin/bash

# Launch robot without arm
ros2 launch turtlebot3_bringup robot.launch.py

# Launch teleop without arm
ros2 run turtlebot3_teleop teleop_keyboard

# Launch robot with arm 
ros2 launch turtlebot3_manipulation_bringup hardware.launch.py

# Launch teleop with arm 
ros2 run turtlebot3_manipulation_teleop turtlebot3_manipulation_teleop

# Launch gazebo world
ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py

# Launch SLAM
ros2 launch turtlebot3_cartographer cartographer.launch.py use_sim_time:=True

# Launch nav2
ros2 launch turtlebot3_navigation2 navigation2.launch.py use_sim_time:=True map:=<path_to_map>.yaml

# Save map
ros2 run nav2_map_server map_saver_cli -f <path_to_save_map>/map_name

# Manipulation launch gazebo
ros2 launch turtlebot3_manipulation_gazebo gazebo.launch.py

# Manipulation launch gazebo + rviz
ros2 launch turtlebot3_manipulation_gazebo gazebo.launch.py start_rviz:=true

# Publish robot description
ros2 launch turtlebot3_manipulation_moveit_config move_group.launch.py

# Manipulation MoveIt servo
ros2 launch turtlebot3_manipulation_moveit_config servo.launch.py

# Manipulation teleop
ros2 run turtlebot3_manipulation_teleop turtlebot3_manipulation_teleop

# Manipulation nav2
ros2 launch turtlebot3_manipulation_navigation2 navigation2.launch.py map_yaml_file:=<path_to_map>.yaml

# Download dependencies using rosdep 
rosdep install --from-paths src -i -y

#sudo Password
masterEE
